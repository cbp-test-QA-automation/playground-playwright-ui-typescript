name: Shared execution run
on:
    workflow_dispatch: 

permissions:
      contents: write
      pull-requests: write
      pages: write
      id-token: write

jobs:

    build:
        runs-on: ubuntu-22.04
        steps:
        - name: checkout repo
          uses: actions/checkout@v4

        - name: setup node
          uses: actions/setup-node@v4
          with:
            node-version: 20

        - name: Cache Node Modules
          id: cache-node-modules
          uses: actions/cache@v4
          with:
            path: |
             node_modules
            key: modules-${{ hashFiles('package-lock.json') }}
        
        - name: Cache Playwright Binaries
          id: cache-playwright
          uses: actions/cache@v4
          with:
            path: |
             ~/.cache/ms-playwright
            key: playwright-${{ hashFiles('package-lock.json') }}

        - name: Install dependencies
          id: install-dependencies
          if: steps.cache-node-modules.outputs.cache-hit != 'true'
          run: npm ci

        - name: Get test count
          id: playwright-count
          run: |
                count=$(npx playwright test --list 2>/dev/null | grep '^Total:' | awk '{ if ($2 > 0) print $2; else print 0 }')
                echo "test_count=$count" >> "$GITHUB_OUTPUT"
    test:
        needs: [ build]
        runs-on: ubuntu-22.04   
        strategy:
            fail-fast: false
            matrix:
                    shardIndex: [1, 2, 3, 4]
                    shardTotal: [4]
        steps:
        - name: checkout repo
          uses: actions/checkout@v4

        - name: setup node
          uses: actions/setup-node@v4
          with:
            node-version: 20

        - name: Cache Node Modules
          id: cache-node-modules
          uses: actions/cache@v4
          with:
            path: |
             node_modules
            key: modules-${{ hashFiles('package-lock.json') }}
        
        - name: Cache Playwright Binaries
          id: cache-playwright
          uses: actions/cache@v4
          with:
            path: |
             ~/.cache/ms-playwright
            key: playwright-${{ hashFiles('package-lock.json') }}

        - name: Install dependencies
          id: install-dependencies
          if: steps.cache-node-modules.outputs.cache-hit != 'true'
          run: npm ci

        - name: Install Playwright Browsers
          id: install-playwright-browsers
          if: steps.cache-playwright.outputs.cache-hit != 'true'
          run: npx playwright install --with-deps

        - name: Run Playwright tests
          run: npx playwright test --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}

        - name: Upload blob report to GitHub Actions Artifacts
          if: ${{ !cancelled() }}
          uses: actions/upload-artifact@v4
          with:
            name: blob-report-${{ matrix.shardIndex }}
            path: blob-report
            retention-days: 1
    merge-reports:
    # Merge reports after playwright-tests, even if some shards have failed
        if: ${{ !cancelled() }}
        needs: [build, test]

        runs-on: ubuntu-latest
        steps:
        - name: checkout repo
          uses: actions/checkout@v4

        - name: setup node
          uses: actions/setup-node@v4
          with:
            node-version: 20

        - name: Cache Node Modules
          id: cache-node-modules
          uses: actions/cache@v4
          with:
            path: |
             node_modules
            key: modules-${{ hashFiles('package-lock.json') }}
        
        - name: Cache Playwright Binaries
          id: cache-playwright
          uses: actions/cache@v4
          with:
            path: |
             ~/.cache/ms-playwright
            key: playwright-${{ hashFiles('package-lock.json') }}

        - name: Install dependencies
          id: install-dependencies
          if: steps.cache-node-modules.outputs.cache-hit != 'true'
          run: npm ci

        - name: Install Playwright Browsers
          id: install-playwright-browsers
          if: steps.cache-playwright.outputs.cache-hit != 'true'
          run: npx playwright install --with-deps

        - name: Download blob reports from GitHub Actions Artifacts
          uses: actions/download-artifact@v4
          with:
            path: all-blob-reports
            pattern: blob-report-*
            merge-multiple: true

        - name: Merge into HTML Report
          run: npx playwright merge-reports --reporter html ./all-blob-reports

        - name: Upload HTML report
          uses: actions/upload-artifact@v4
          with:
            name: html-report--attempt-${{ github.run_attempt }}
            path: playwright-report
            retention-days: 1
